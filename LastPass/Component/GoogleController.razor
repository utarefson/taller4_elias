@page "/drive"
@inject IModalService modal
             
@for (int i = 0; i < GetListOfFiles().Count; i++)
{
    <h2 style="color:black;">@i - @GetListOfFiles()[i]</h2>
  
}
<button @onclick="ParameterID">Download</button>
<input class="IdImput" @bind="FileId">Dowload</input>
<br />
<button @onclick="ParameterName">Create</button>
<input class="NameImput" @bind="Name">Name</input>
<br />
<button @onclick="ParameterEdit">Open</button>
<input class="NameImput" @bind="Name">Name</input>
<br />





@code
{
    public string FileId { get; set; }
    public string Name { get; set; }
    public string filePath { get; set; }
    static string[] Scopes = { DriveService.Scope.Drive };
    static string ApplicationName = "Drive API .NET Quickstart";
    IList<Google.Apis.Drive.v3.Data.File> Files;
    public void JUSTDOIT(){
        CreateFile("elias");
    }
    public List<string> GetListOfFiles() 
    {
        List<string> ListOfFiles = new List<string>();
        this.Listed();
        foreach (var file in Files)
        {
            ListOfFiles.Add(file.Name);
        }    
        return ListOfFiles;
    }
    private void Listed()
    {
        var Service = this.GetCredential();
        FilesResource.ListRequest listRequest = Service.Files.List();
        listRequest.PageSize = 10;
        listRequest.Fields = "nextPageToken, files(id,  name )";
        this.Files = listRequest.Execute().Files;
    }
    public void CreateFile(string Name)
    {
        var Service = this.GetCredential();
        var fileMetadata = new Google.Apis.Drive.v3.Data.File();
        fileMetadata.Name = Name;
        fileMetadata.MimeType ="application/json";
        var request = Service.Files.Create(fileMetadata);
        request.Execute();
    }
    public void ParameterID() 
    {
        Download(GetId(FileId));
    }
    public void ParameterName() 
    {
        CreateFile(Name);
    }


    public void ParameterEdit() 
    {
        EditDoc(Name,GetId(Name));
    }

    public string EditDoc(string Name, string fileId )
    {
        var Service = this.GetCredential();
        var fileMetadata = new Google.Apis.Drive.v3.Data.File()
              {
                    Name = Name,
                    MimeType = "txt"
              };
        FilesResource.CreateMediaUpload request;
        // Create a new file on drive.

        using (var stream = new FileStream(filePath,
                   FileMode.Open))
        {
            // Create a new file, with metadata and stream.
            request = Service.Files.Create(
                fileMetadata, stream, Name);
            request.Fields = fileId;
            request.Upload();
        }

        var file = request.ResponseBody;
        // Prints the uploaded file id.
        Console.WriteLine("File ID: " + file.Id);
        return (file.Id);

    }
    public string GetId(string fileId)
    {

        foreach (var file in Files)
        {
            if( file.Name == fileId )
            {
                return file.Id;
            }
        }
        return null;
    }

    public MemoryStream Download(string fileId)
    {
        var Service = this.GetCredential();
        var request = Service.Files.Get(fileId);
        var stream = new MemoryStream();      

        request.Download(stream);
        MemoryStream memstream = stream;
        byte[] jsonBytes = new byte[memstream.Length];
        memstream.Read(jsonBytes, 0, (int)memstream.Length);
        string jsonString = System.Text.Encoding.ASCII.GetString(jsonBytes);
        string decoded = Encoding.UTF8.GetString(stream.ToArray());
        Console.WriteLine(decoded);
        stream.CopyTo(new FileStream(@"D:\Taller de progra 4\batman.txt", FileMode.CreateNew));
        return stream;        
    }
    public string ReadFile(string fileId)
    {
        var service = GetCredential();

        var request = service.Files.Get(fileId);
        var stream = new MemoryStream();

        request.Download(stream);

        MemoryStream memstream = stream;

        return Encoding.UTF8.GetString(stream.ToArray());


    }

    public string UploadFileToDrive(string fileid)
    {


        var service = GetCredential();


        string contentType = "application/json";


        var updatedFileMetadata = new Google.Apis.Drive.v3.Data.File();
        updatedFileMetadata.Name = "elias";

        FilesResource.UpdateMediaUpload updateRequest;
        string fileId = fileid; 
        using (var stream = new FileStream(@"D:\C#Test\Examples\GoogleDriveConsole\test.json", FileMode.OpenOrCreate))
        {
            updateRequest = service.Files.Update(updatedFileMetadata, fileId, stream, contentType);
            updateRequest.Upload();
            var file = updateRequest.ResponseBody;
            return file.Id;
        };

        //FilesResource.CreateMediaUpload request;
        //using (var stream = new FileStream(filePath, FileMode.Open))
        //{
        //    request = service.Files.Create(fileMetadata, stream, contentType);
        //    request.Fields = "id";
        //    request.Upload();
        //    var file = request.ResponseBody;
        //    return file.Id;
        //};
        //Console.WriteLine("not working");
        //return string.Empty;

    }
    private DriveService GetCredential()
    {
        UserCredential Credential;
        using (var Stream =
        new FileStream("Credentials/TokenCmd.json", FileMode.Open, FileAccess.ReadWrite))
        {
            string CredPath = "token.json";
            Credential = GoogleWebAuthorizationBroker.AuthorizeAsync(
                GoogleClientSecrets.FromStream(Stream).Secrets,
                Scopes,
                "user",
                CancellationToken.None,
                new FileDataStore(CredPath, true)).Result;
            var Service = new DriveService(new BaseClientService.Initializer
            {
                HttpClientInitializer = Credential,
                ApplicationName = ApplicationName
            });
            return Service;
        }
    }

      

}



             